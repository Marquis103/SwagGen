//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APICWPSettings: APIModel {

    public var enablePartialReleaseTracking: Bool?

    public var showInSettingsUI: Bool?

    public init(enablePartialReleaseTracking: Bool? = nil, showInSettingsUI: Bool? = nil) {
        self.enablePartialReleaseTracking = enablePartialReleaseTracking
        self.showInSettingsUI = showInSettingsUI
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        enablePartialReleaseTracking = try container.decodeIfPresent("EnablePartialReleaseTracking")
        showInSettingsUI = try container.decodeIfPresent("ShowInSettingsUI")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(enablePartialReleaseTracking, forKey: "EnablePartialReleaseTracking")
        try container.encodeIfPresent(showInSettingsUI, forKey: "ShowInSettingsUI")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APICWPSettings else { return false }
      guard self.enablePartialReleaseTracking == object.enablePartialReleaseTracking else { return false }
      guard self.showInSettingsUI == object.showInSettingsUI else { return false }
      return true
    }

    public static func == (lhs: O3APICWPSettings, rhs: O3APICWPSettings) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
