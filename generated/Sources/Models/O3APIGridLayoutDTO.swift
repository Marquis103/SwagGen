//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIGridLayoutDTO: APIModel {

    public var className: String?

    public var exportParameters: String?

    public var id: Int?

    public var isEditable: Bool?

    public var isSystemDefault: Bool?

    public var layout: String?

    public var layoutKey: String?

    public var name: String?

    public var ownerName: String?

    public var userID: Int?

    public init(className: String? = nil, exportParameters: String? = nil, id: Int? = nil, isEditable: Bool? = nil, isSystemDefault: Bool? = nil, layout: String? = nil, layoutKey: String? = nil, name: String? = nil, ownerName: String? = nil, userID: Int? = nil) {
        self.className = className
        self.exportParameters = exportParameters
        self.id = id
        self.isEditable = isEditable
        self.isSystemDefault = isSystemDefault
        self.layout = layout
        self.layoutKey = layoutKey
        self.name = name
        self.ownerName = ownerName
        self.userID = userID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        className = try container.decodeIfPresent("ClassName")
        exportParameters = try container.decodeIfPresent("ExportParameters")
        id = try container.decodeIfPresent("ID")
        isEditable = try container.decodeIfPresent("IsEditable")
        isSystemDefault = try container.decodeIfPresent("IsSystemDefault")
        layout = try container.decodeIfPresent("Layout")
        layoutKey = try container.decodeIfPresent("LayoutKey")
        name = try container.decodeIfPresent("Name")
        ownerName = try container.decodeIfPresent("OwnerName")
        userID = try container.decodeIfPresent("UserID")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(className, forKey: "ClassName")
        try container.encodeIfPresent(exportParameters, forKey: "ExportParameters")
        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(isEditable, forKey: "IsEditable")
        try container.encodeIfPresent(isSystemDefault, forKey: "IsSystemDefault")
        try container.encodeIfPresent(layout, forKey: "Layout")
        try container.encodeIfPresent(layoutKey, forKey: "LayoutKey")
        try container.encodeIfPresent(name, forKey: "Name")
        try container.encodeIfPresent(ownerName, forKey: "OwnerName")
        try container.encodeIfPresent(userID, forKey: "UserID")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIGridLayoutDTO else { return false }
      guard self.className == object.className else { return false }
      guard self.exportParameters == object.exportParameters else { return false }
      guard self.id == object.id else { return false }
      guard self.isEditable == object.isEditable else { return false }
      guard self.isSystemDefault == object.isSystemDefault else { return false }
      guard self.layout == object.layout else { return false }
      guard self.layoutKey == object.layoutKey else { return false }
      guard self.name == object.name else { return false }
      guard self.ownerName == object.ownerName else { return false }
      guard self.userID == object.userID else { return false }
      return true
    }

    public static func == (lhs: O3APIGridLayoutDTO, rhs: O3APIGridLayoutDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
