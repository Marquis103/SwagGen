//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIO3FilterGroup: APIModel {

    public var groups: [O3APIFilterGroup]?

    public var isOr: Bool?

    public var rules: [O3APIFilterRule]?

    public init(groups: [O3APIFilterGroup]? = nil, isOr: Bool? = nil, rules: [O3APIFilterRule]? = nil) {
        self.groups = groups
        self.isOr = isOr
        self.rules = rules
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        groups = try container.decodeArrayIfPresent("Groups")
        isOr = try container.decodeIfPresent("IsOr")
        rules = try container.decodeArrayIfPresent("Rules")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(groups, forKey: "Groups")
        try container.encodeIfPresent(isOr, forKey: "IsOr")
        try container.encodeIfPresent(rules, forKey: "Rules")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIO3FilterGroup else { return false }
      guard self.groups == object.groups else { return false }
      guard self.isOr == object.isOr else { return false }
      guard self.rules == object.rules else { return false }
      return true
    }

    public static func == (lhs: O3APIO3FilterGroup, rhs: O3APIO3FilterGroup) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
