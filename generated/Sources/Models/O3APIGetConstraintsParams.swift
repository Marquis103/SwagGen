//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIGetConstraintsParams: APIModel {

    public var constraintType: String?

    public var countdownGreaterThan: Int?

    public var countdownGreaterThanOrEqual: Int?

    public var countdownLessThan: Int?

    public var filterBy: String?

    public var filterValue: String?

    public var showComplete: Bool?

    public init(constraintType: String? = nil, countdownGreaterThan: Int? = nil, countdownGreaterThanOrEqual: Int? = nil, countdownLessThan: Int? = nil, filterBy: String? = nil, filterValue: String? = nil, showComplete: Bool? = nil) {
        self.constraintType = constraintType
        self.countdownGreaterThan = countdownGreaterThan
        self.countdownGreaterThanOrEqual = countdownGreaterThanOrEqual
        self.countdownLessThan = countdownLessThan
        self.filterBy = filterBy
        self.filterValue = filterValue
        self.showComplete = showComplete
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        constraintType = try container.decodeIfPresent("ConstraintType")
        countdownGreaterThan = try container.decodeIfPresent("CountdownGreaterThan")
        countdownGreaterThanOrEqual = try container.decodeIfPresent("CountdownGreaterThanOrEqual")
        countdownLessThan = try container.decodeIfPresent("CountdownLessThan")
        filterBy = try container.decodeIfPresent("FilterBy")
        filterValue = try container.decodeIfPresent("FilterValue")
        showComplete = try container.decodeIfPresent("ShowComplete")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(constraintType, forKey: "ConstraintType")
        try container.encodeIfPresent(countdownGreaterThan, forKey: "CountdownGreaterThan")
        try container.encodeIfPresent(countdownGreaterThanOrEqual, forKey: "CountdownGreaterThanOrEqual")
        try container.encodeIfPresent(countdownLessThan, forKey: "CountdownLessThan")
        try container.encodeIfPresent(filterBy, forKey: "FilterBy")
        try container.encodeIfPresent(filterValue, forKey: "FilterValue")
        try container.encodeIfPresent(showComplete, forKey: "ShowComplete")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIGetConstraintsParams else { return false }
      guard self.constraintType == object.constraintType else { return false }
      guard self.countdownGreaterThan == object.countdownGreaterThan else { return false }
      guard self.countdownGreaterThanOrEqual == object.countdownGreaterThanOrEqual else { return false }
      guard self.countdownLessThan == object.countdownLessThan else { return false }
      guard self.filterBy == object.filterBy else { return false }
      guard self.filterValue == object.filterValue else { return false }
      guard self.showComplete == object.showComplete else { return false }
      return true
    }

    public static func == (lhs: O3APIGetConstraintsParams, rhs: O3APIGetConstraintsParams) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
