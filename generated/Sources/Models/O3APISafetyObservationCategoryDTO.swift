//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APISafetyObservationCategoryDTO: APIModel {

    public var items: [O3APISafetyObservationTypesDTO]?

    public var name: String?

    public var sortOrder: Int?

    public init(items: [O3APISafetyObservationTypesDTO]? = nil, name: String? = nil, sortOrder: Int? = nil) {
        self.items = items
        self.name = name
        self.sortOrder = sortOrder
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        items = try container.decodeArrayIfPresent("Items")
        name = try container.decodeIfPresent("Name")
        sortOrder = try container.decodeIfPresent("SortOrder")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(items, forKey: "Items")
        try container.encodeIfPresent(name, forKey: "Name")
        try container.encodeIfPresent(sortOrder, forKey: "SortOrder")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APISafetyObservationCategoryDTO else { return false }
      guard self.items == object.items else { return false }
      guard self.name == object.name else { return false }
      guard self.sortOrder == object.sortOrder else { return false }
      return true
    }

    public static func == (lhs: O3APISafetyObservationCategoryDTO, rhs: O3APISafetyObservationCategoryDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
