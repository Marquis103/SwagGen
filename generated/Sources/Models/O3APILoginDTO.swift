//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APILoginDTO: APIModel {

    public enum O3APIMode: Int, Codable, Equatable, CaseIterable {
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case undecodable

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(Int.self)
            self = O3APIMode(rawValue: rawValue) ?? .undecodable
        }
    }

    public var displayName: String?

    public var email: String?

    public var isMobile: Bool?

    public var mode: O3APIMode?

    public var password: String?

    public var recaptcha: String?

    public var rememberMe: Bool?

    public var username: String?

    public init(displayName: String? = nil, email: String? = nil, isMobile: Bool? = nil, mode: O3APIMode? = nil, password: String? = nil, recaptcha: String? = nil, rememberMe: Bool? = nil, username: String? = nil) {
        self.displayName = displayName
        self.email = email
        self.isMobile = isMobile
        self.mode = mode
        self.password = password
        self.recaptcha = recaptcha
        self.rememberMe = rememberMe
        self.username = username
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        displayName = try container.decodeIfPresent("DisplayName")
        email = try container.decodeIfPresent("Email")
        isMobile = try container.decodeIfPresent("IsMobile")
        mode = try container.decodeIfPresent("Mode")
        password = try container.decodeIfPresent("Password")
        recaptcha = try container.decodeIfPresent("Recaptcha")
        rememberMe = try container.decodeIfPresent("RememberMe")
        username = try container.decodeIfPresent("Username")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(displayName, forKey: "DisplayName")
        try container.encodeIfPresent(email, forKey: "Email")
        try container.encodeIfPresent(isMobile, forKey: "IsMobile")
        try container.encodeIfPresent(mode, forKey: "Mode")
        try container.encodeIfPresent(password, forKey: "Password")
        try container.encodeIfPresent(recaptcha, forKey: "Recaptcha")
        try container.encodeIfPresent(rememberMe, forKey: "RememberMe")
        try container.encodeIfPresent(username, forKey: "Username")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APILoginDTO else { return false }
      guard self.displayName == object.displayName else { return false }
      guard self.email == object.email else { return false }
      guard self.isMobile == object.isMobile else { return false }
      guard self.mode == object.mode else { return false }
      guard self.password == object.password else { return false }
      guard self.recaptcha == object.recaptcha else { return false }
      guard self.rememberMe == object.rememberMe else { return false }
      guard self.username == object.username else { return false }
      return true
    }

    public static func == (lhs: O3APILoginDTO, rhs: O3APILoginDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
