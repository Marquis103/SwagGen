//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIBoardDTO: APIModel {

    public var description: String?

    public var id: Int?

    public var isPublic: Bool?

    public var name: String?

    public var ownerID: Int?

    public var ownerName: String?

    public var projectID: Int?

    public var projectTeamIDs: [Int]?

    public var taskCount: Int?

    public init(description: String? = nil, id: Int? = nil, isPublic: Bool? = nil, name: String? = nil, ownerID: Int? = nil, ownerName: String? = nil, projectID: Int? = nil, projectTeamIDs: [Int]? = nil, taskCount: Int? = nil) {
        self.description = description
        self.id = id
        self.isPublic = isPublic
        self.name = name
        self.ownerID = ownerID
        self.ownerName = ownerName
        self.projectID = projectID
        self.projectTeamIDs = projectTeamIDs
        self.taskCount = taskCount
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        description = try container.decodeIfPresent("Description")
        id = try container.decodeIfPresent("ID")
        isPublic = try container.decodeIfPresent("IsPublic")
        name = try container.decodeIfPresent("Name")
        ownerID = try container.decodeIfPresent("OwnerID")
        ownerName = try container.decodeIfPresent("OwnerName")
        projectID = try container.decodeIfPresent("ProjectID")
        projectTeamIDs = try container.decodeArrayIfPresent("ProjectTeamIDs")
        taskCount = try container.decodeIfPresent("TaskCount")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(description, forKey: "Description")
        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(isPublic, forKey: "IsPublic")
        try container.encodeIfPresent(name, forKey: "Name")
        try container.encodeIfPresent(ownerID, forKey: "OwnerID")
        try container.encodeIfPresent(ownerName, forKey: "OwnerName")
        try container.encodeIfPresent(projectID, forKey: "ProjectID")
        try container.encodeIfPresent(projectTeamIDs, forKey: "ProjectTeamIDs")
        try container.encodeIfPresent(taskCount, forKey: "TaskCount")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIBoardDTO else { return false }
      guard self.description == object.description else { return false }
      guard self.id == object.id else { return false }
      guard self.isPublic == object.isPublic else { return false }
      guard self.name == object.name else { return false }
      guard self.ownerID == object.ownerID else { return false }
      guard self.ownerName == object.ownerName else { return false }
      guard self.projectID == object.projectID else { return false }
      guard self.projectTeamIDs == object.projectTeamIDs else { return false }
      guard self.taskCount == object.taskCount else { return false }
      return true
    }

    public static func == (lhs: O3APIBoardDTO, rhs: O3APIBoardDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
