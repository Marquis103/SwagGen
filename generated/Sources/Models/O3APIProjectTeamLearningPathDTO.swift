//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIProjectTeamLearningPathDTO: APIModel {

    public var learningPath: String?

    public var learningPathID: Int?

    public var projectTeam: String?

    public var projectTeamID: Int?

    public init(learningPath: String? = nil, learningPathID: Int? = nil, projectTeam: String? = nil, projectTeamID: Int? = nil) {
        self.learningPath = learningPath
        self.learningPathID = learningPathID
        self.projectTeam = projectTeam
        self.projectTeamID = projectTeamID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        learningPath = try container.decodeIfPresent("LearningPath")
        learningPathID = try container.decodeIfPresent("LearningPathID")
        projectTeam = try container.decodeIfPresent("ProjectTeam")
        projectTeamID = try container.decodeIfPresent("ProjectTeamID")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(learningPath, forKey: "LearningPath")
        try container.encodeIfPresent(learningPathID, forKey: "LearningPathID")
        try container.encodeIfPresent(projectTeam, forKey: "ProjectTeam")
        try container.encodeIfPresent(projectTeamID, forKey: "ProjectTeamID")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIProjectTeamLearningPathDTO else { return false }
      guard self.learningPath == object.learningPath else { return false }
      guard self.learningPathID == object.learningPathID else { return false }
      guard self.projectTeam == object.projectTeam else { return false }
      guard self.projectTeamID == object.projectTeamID else { return false }
      return true
    }

    public static func == (lhs: O3APIProjectTeamLearningPathDTO, rhs: O3APIProjectTeamLearningPathDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
