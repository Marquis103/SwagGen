//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIProgramInitiativeGoalDTO: APIModel {

    public var id: Int?

    public var initiativeGoalID: Int?

    public var programGoalID: Int?

    public init(id: Int? = nil, initiativeGoalID: Int? = nil, programGoalID: Int? = nil) {
        self.id = id
        self.initiativeGoalID = initiativeGoalID
        self.programGoalID = programGoalID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("ID")
        initiativeGoalID = try container.decodeIfPresent("InitiativeGoalID")
        programGoalID = try container.decodeIfPresent("ProgramGoalID")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(initiativeGoalID, forKey: "InitiativeGoalID")
        try container.encodeIfPresent(programGoalID, forKey: "ProgramGoalID")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIProgramInitiativeGoalDTO else { return false }
      guard self.id == object.id else { return false }
      guard self.initiativeGoalID == object.initiativeGoalID else { return false }
      guard self.programGoalID == object.programGoalID else { return false }
      return true
    }

    public static func == (lhs: O3APIProgramInitiativeGoalDTO, rhs: O3APIProgramInitiativeGoalDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
