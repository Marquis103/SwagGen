//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIBestPracticeCategoryMeasurementDefinition: APIModel {

    public enum O3APISegments: Int, Codable, Equatable, CaseIterable {
        case _1 = 1
        case _2 = 2
        case _3 = 3
        case undecodable

        public init(from decoder: Decoder) throws {
            let container = try decoder.singleValueContainer()
            let rawValue = try container.decode(Int.self)
            self = O3APISegments(rawValue: rawValue) ?? .undecodable
        }
    }

    public var segments: [O3APISegments]?

    public var title: String?

    public init(segments: [O3APISegments]? = nil, title: String? = nil) {
        self.segments = segments
        self.title = title
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        segments = try container.decodeArrayIfPresent("Segments")
        title = try container.decodeIfPresent("Title")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(segments, forKey: "Segments")
        try container.encodeIfPresent(title, forKey: "Title")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIBestPracticeCategoryMeasurementDefinition else { return false }
      guard self.segments == object.segments else { return false }
      guard self.title == object.title else { return false }
      return true
    }

    public static func == (lhs: O3APIBestPracticeCategoryMeasurementDefinition, rhs: O3APIBestPracticeCategoryMeasurementDefinition) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
