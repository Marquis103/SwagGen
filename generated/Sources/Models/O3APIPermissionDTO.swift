//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIPermissionDTO: APIModel {

    public var description: String?

    public var isChecked: Bool?

    public var originalValue: Bool?

    public init(description: String? = nil, isChecked: Bool? = nil, originalValue: Bool? = nil) {
        self.description = description
        self.isChecked = isChecked
        self.originalValue = originalValue
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        description = try container.decodeIfPresent("Description")
        isChecked = try container.decodeIfPresent("IsChecked")
        originalValue = try container.decodeIfPresent("OriginalValue")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(description, forKey: "Description")
        try container.encodeIfPresent(isChecked, forKey: "IsChecked")
        try container.encodeIfPresent(originalValue, forKey: "OriginalValue")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIPermissionDTO else { return false }
      guard self.description == object.description else { return false }
      guard self.isChecked == object.isChecked else { return false }
      guard self.originalValue == object.originalValue else { return false }
      return true
    }

    public static func == (lhs: O3APIPermissionDTO, rhs: O3APIPermissionDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
