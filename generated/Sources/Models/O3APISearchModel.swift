//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APISearchModel: APIModel {

    public var entityTypeID: Int?

    public var projectID: Int?

    public var search: String?

    public init(entityTypeID: Int? = nil, projectID: Int? = nil, search: String? = nil) {
        self.entityTypeID = entityTypeID
        self.projectID = projectID
        self.search = search
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        entityTypeID = try container.decodeIfPresent("entityTypeID")
        projectID = try container.decodeIfPresent("projectID")
        search = try container.decodeIfPresent("search")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(entityTypeID, forKey: "entityTypeID")
        try container.encodeIfPresent(projectID, forKey: "projectID")
        try container.encodeIfPresent(search, forKey: "search")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APISearchModel else { return false }
      guard self.entityTypeID == object.entityTypeID else { return false }
      guard self.projectID == object.projectID else { return false }
      guard self.search == object.search else { return false }
      return true
    }

    public static func == (lhs: O3APISearchModel, rhs: O3APISearchModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
