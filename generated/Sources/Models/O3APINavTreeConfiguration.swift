//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APINavTreeConfiguration: APIModel {

    public var dashboardID: Int?

    public var navTree: [O3APINavTreeNode]?

    public var selectedEntity: O3APISimpleListDTO?

    public init(dashboardID: Int? = nil, navTree: [O3APINavTreeNode]? = nil, selectedEntity: O3APISimpleListDTO? = nil) {
        self.dashboardID = dashboardID
        self.navTree = navTree
        self.selectedEntity = selectedEntity
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        dashboardID = try container.decodeIfPresent("DashboardID")
        navTree = try container.decodeArrayIfPresent("NavTree")
        selectedEntity = try container.decodeIfPresent("SelectedEntity")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(dashboardID, forKey: "DashboardID")
        try container.encodeIfPresent(navTree, forKey: "NavTree")
        try container.encodeIfPresent(selectedEntity, forKey: "SelectedEntity")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APINavTreeConfiguration else { return false }
      guard self.dashboardID == object.dashboardID else { return false }
      guard self.navTree == object.navTree else { return false }
      guard self.selectedEntity == object.selectedEntity else { return false }
      return true
    }

    public static func == (lhs: O3APINavTreeConfiguration, rhs: O3APINavTreeConfiguration) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
