//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APINotificationSubscriptionDTO: APIModel {

    public var active: Bool?

    public var description: String?

    public var id: Int?

    public var notificationType: String?

    public var showFilter: Bool?

    public var title: String?

    public var userID: Int?

    public init(active: Bool? = nil, description: String? = nil, id: Int? = nil, notificationType: String? = nil, showFilter: Bool? = nil, title: String? = nil, userID: Int? = nil) {
        self.active = active
        self.description = description
        self.id = id
        self.notificationType = notificationType
        self.showFilter = showFilter
        self.title = title
        self.userID = userID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        active = try container.decodeIfPresent("Active")
        description = try container.decodeIfPresent("Description")
        id = try container.decodeIfPresent("ID")
        notificationType = try container.decodeIfPresent("NotificationType")
        showFilter = try container.decodeIfPresent("ShowFilter")
        title = try container.decodeIfPresent("Title")
        userID = try container.decodeIfPresent("UserID")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(active, forKey: "Active")
        try container.encodeIfPresent(description, forKey: "Description")
        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(notificationType, forKey: "NotificationType")
        try container.encodeIfPresent(showFilter, forKey: "ShowFilter")
        try container.encodeIfPresent(title, forKey: "Title")
        try container.encodeIfPresent(userID, forKey: "UserID")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APINotificationSubscriptionDTO else { return false }
      guard self.active == object.active else { return false }
      guard self.description == object.description else { return false }
      guard self.id == object.id else { return false }
      guard self.notificationType == object.notificationType else { return false }
      guard self.showFilter == object.showFilter else { return false }
      guard self.title == object.title else { return false }
      guard self.userID == object.userID else { return false }
      return true
    }

    public static func == (lhs: O3APINotificationSubscriptionDTO, rhs: O3APINotificationSubscriptionDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
