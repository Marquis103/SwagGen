//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIAddConstraintDTO: APIModel {

    public var constraintName: String?

    public var constraintTypeID: Int?

    public var entityIDs: [Int]?

    public init(constraintName: String? = nil, constraintTypeID: Int? = nil, entityIDs: [Int]? = nil) {
        self.constraintName = constraintName
        self.constraintTypeID = constraintTypeID
        self.entityIDs = entityIDs
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        constraintName = try container.decodeIfPresent("ConstraintName")
        constraintTypeID = try container.decodeIfPresent("ConstraintTypeID")
        entityIDs = try container.decodeArrayIfPresent("EntityIDs")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(constraintName, forKey: "ConstraintName")
        try container.encodeIfPresent(constraintTypeID, forKey: "ConstraintTypeID")
        try container.encodeIfPresent(entityIDs, forKey: "EntityIDs")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIAddConstraintDTO else { return false }
      guard self.constraintName == object.constraintName else { return false }
      guard self.constraintTypeID == object.constraintTypeID else { return false }
      guard self.entityIDs == object.entityIDs else { return false }
      return true
    }

    public static func == (lhs: O3APIAddConstraintDTO, rhs: O3APIAddConstraintDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
