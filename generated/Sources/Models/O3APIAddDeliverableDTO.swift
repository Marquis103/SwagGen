//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIAddDeliverableDTO: APIModel {

    public var deliverableName: String?

    public var deliverableTypeID: Int?

    public var entityIDs: [Int]?

    public init(deliverableName: String? = nil, deliverableTypeID: Int? = nil, entityIDs: [Int]? = nil) {
        self.deliverableName = deliverableName
        self.deliverableTypeID = deliverableTypeID
        self.entityIDs = entityIDs
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        deliverableName = try container.decodeIfPresent("DeliverableName")
        deliverableTypeID = try container.decodeIfPresent("DeliverableTypeID")
        entityIDs = try container.decodeArrayIfPresent("EntityIDs")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(deliverableName, forKey: "DeliverableName")
        try container.encodeIfPresent(deliverableTypeID, forKey: "DeliverableTypeID")
        try container.encodeIfPresent(entityIDs, forKey: "EntityIDs")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIAddDeliverableDTO else { return false }
      guard self.deliverableName == object.deliverableName else { return false }
      guard self.deliverableTypeID == object.deliverableTypeID else { return false }
      guard self.entityIDs == object.entityIDs else { return false }
      return true
    }

    public static func == (lhs: O3APIAddDeliverableDTO, rhs: O3APIAddDeliverableDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
