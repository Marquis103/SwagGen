//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIUsageAnalyticsEventDTO: APIModel {

    public var entityID: Int?

    public var entityTypeID: Int?

    public var eventKey: String?

    public var projectID: Int?

    public init(entityID: Int? = nil, entityTypeID: Int? = nil, eventKey: String? = nil, projectID: Int? = nil) {
        self.entityID = entityID
        self.entityTypeID = entityTypeID
        self.eventKey = eventKey
        self.projectID = projectID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        entityID = try container.decodeIfPresent("EntityID")
        entityTypeID = try container.decodeIfPresent("EntityTypeID")
        eventKey = try container.decodeIfPresent("EventKey")
        projectID = try container.decodeIfPresent("ProjectID")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(entityID, forKey: "EntityID")
        try container.encodeIfPresent(entityTypeID, forKey: "EntityTypeID")
        try container.encodeIfPresent(eventKey, forKey: "EventKey")
        try container.encodeIfPresent(projectID, forKey: "ProjectID")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIUsageAnalyticsEventDTO else { return false }
      guard self.entityID == object.entityID else { return false }
      guard self.entityTypeID == object.entityTypeID else { return false }
      guard self.eventKey == object.eventKey else { return false }
      guard self.projectID == object.projectID else { return false }
      return true
    }

    public static func == (lhs: O3APIUsageAnalyticsEventDTO, rhs: O3APIUsageAnalyticsEventDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
