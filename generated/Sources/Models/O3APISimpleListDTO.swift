//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APISimpleListDTO: APIModel {

    public var color: String?

    public var entityTypeID: Int?

    public var id: Int?

    public var name: String?

    public var sortOrder: Int?

    public init(color: String? = nil, entityTypeID: Int? = nil, id: Int? = nil, name: String? = nil, sortOrder: Int? = nil) {
        self.color = color
        self.entityTypeID = entityTypeID
        self.id = id
        self.name = name
        self.sortOrder = sortOrder
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        color = try container.decodeIfPresent("Color")
        entityTypeID = try container.decodeIfPresent("EntityTypeID")
        id = try container.decodeIfPresent("ID")
        name = try container.decodeIfPresent("Name")
        sortOrder = try container.decodeIfPresent("SortOrder")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(color, forKey: "Color")
        try container.encodeIfPresent(entityTypeID, forKey: "EntityTypeID")
        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(name, forKey: "Name")
        try container.encodeIfPresent(sortOrder, forKey: "SortOrder")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APISimpleListDTO else { return false }
      guard self.color == object.color else { return false }
      guard self.entityTypeID == object.entityTypeID else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.sortOrder == object.sortOrder else { return false }
      return true
    }

    public static func == (lhs: O3APISimpleListDTO, rhs: O3APISimpleListDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
