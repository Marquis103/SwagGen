//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIDashboardWidgetLayoutDTO: APIModel {

    public var id: Int?

    public var col: Int?

    public var row: Int?

    public var sizeX: Int?

    public var sizeY: Int?

    public init(id: Int? = nil, col: Int? = nil, row: Int? = nil, sizeX: Int? = nil, sizeY: Int? = nil) {
        self.id = id
        self.col = col
        self.row = row
        self.sizeX = sizeX
        self.sizeY = sizeY
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("ID")
        col = try container.decodeIfPresent("col")
        row = try container.decodeIfPresent("row")
        sizeX = try container.decodeIfPresent("sizeX")
        sizeY = try container.decodeIfPresent("sizeY")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(col, forKey: "col")
        try container.encodeIfPresent(row, forKey: "row")
        try container.encodeIfPresent(sizeX, forKey: "sizeX")
        try container.encodeIfPresent(sizeY, forKey: "sizeY")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIDashboardWidgetLayoutDTO else { return false }
      guard self.id == object.id else { return false }
      guard self.col == object.col else { return false }
      guard self.row == object.row else { return false }
      guard self.sizeX == object.sizeX else { return false }
      guard self.sizeY == object.sizeY else { return false }
      return true
    }

    public static func == (lhs: O3APIDashboardWidgetLayoutDTO, rhs: O3APIDashboardWidgetLayoutDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
