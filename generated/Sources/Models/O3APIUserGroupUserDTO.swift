//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class O3APIUserGroupUserDTO: APIModel {

    public var id: Int?

    public var userGroupID: Int?

    public var userID: Int?

    public init(id: Int? = nil, userGroupID: Int? = nil, userID: Int? = nil) {
        self.id = id
        self.userGroupID = userGroupID
        self.userID = userID
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        id = try container.decodeIfPresent("ID")
        userGroupID = try container.decodeIfPresent("UserGroupID")
        userID = try container.decodeIfPresent("UserID")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(id, forKey: "ID")
        try container.encodeIfPresent(userGroupID, forKey: "UserGroupID")
        try container.encodeIfPresent(userID, forKey: "UserID")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? O3APIUserGroupUserDTO else { return false }
      guard self.id == object.id else { return false }
      guard self.userGroupID == object.userGroupID else { return false }
      guard self.userID == object.userID else { return false }
      return true
    }

    public static func == (lhs: O3APIUserGroupUserDTO, rhs: O3APIUserGroupUserDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
